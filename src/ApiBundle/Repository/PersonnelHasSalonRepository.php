<?php

namespace ApiBundle\Repository;
use Doctrine\ORM\EntityRepository;
use ApiBundle\Entity\PersonnelHasSalon;
use ApiBundle\Entity\Personnel;
/**
 * PersonnelHasSalonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonnelHasSalonRepository extends EntityRepository
{
  public function ifCoiffeur($idPerso)
  {
    $p = $this->findOneBy(array('personnelMatricule' => $idPerso, 'profession' => 3));

    if (empty($p)){
      return true;
    } else {
      return false;
    }
  }

  // Function listPersoBySalon
  // Paramètre : idSalon
  // Description : retourne les liste du personnel pour un salon donné ( ormis les coiffeurs)
  public function listPersoBySalon($idSalon)
  {
    $p = $this->createQueryBuilder('d')
              ->select('d')
              ->where('d.salonSage = :idSalon')
              ->andwhere('d.profession != :idCoiffeur')
              ->andWhere('d.actif = 1')
              ->setParameter('idCoiffeur',3)
              ->setParameter('idSalon',$idSalon)
              ->getQuery()
              ->getResult();

      return $p;
  }

  public function findActivePersonnel()
  {
    // Permet de checker la date de fin par rapport à la date d'aujourd'hui
    // Voir onPostLoad de l'entity PersonnelHasSalon

    $pers = $this->findAll();
    $this->getEntityManager()->flush();

    $active = $this->createQueryBuilder('ps')
                   ->select('p.matricule')
                   ->leftjoin('ps.personnelMatricule', 'p')
                   ->where('ps.actif = 1')->getQuery()->getResult();

      return $active;
   }

   // Fonction infosCoordinateur : Retourne un coordinateur pour un salon donné
   // Paramètre : idsalon
   // Return array
   public function infosCoordinateur($idsalon)
   {
     $coordo=[];
     $requete = $this->findOneBy(["profession" => 2,
                                       "salonSage" => $idsalon,
                                     ]);

   if (empty($coordo)) {

     $coordo['name'] = 'n/a';
     $coordo['dateDeb'] = 'n/a';
     $coordo['dateFin'] = 'n/a';
     $coordo['profession'] = 'n/a';

   } else {

     $coordo['name'] = $requete->getPersonnelMatricule()->getNom().' '.$requete->getPersonnelMatricule()->getPrenom();
     $coordo['dateDeb'] = $requete->getDateDebut()->format('d-m-Y');
     $coordo['dateFin'] = $requete->getDateFin()->format('d-m-Y');
     $coordo['profession'] = $requete->getProfession()->getNom();

   }
   return $coordo;
 }

}
