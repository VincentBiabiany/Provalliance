{% extends 'base.html.twig' %}
{% block title %}{% endblock %}

{% block body %}
<script type="text/javascript" src="{{ asset('js/jquery.validate.js') }}"></script>

<div class="containerModal">
  <div id="actions">
		<h3 class="titlePage">  {{ "admin.changement_mdp.header"|trans({}, "translator") }}</h3>
    {{ form_start(form, {'attr': { 'id': 'changePassword', 'class':'Allform' } }) }}
            <div class="form-group">
                <label class="control-label label col-xs-12" for="salon"> {{ form_label(form.plainPassword.first) }}</label>
                     <div class="col-sm-12">
                            {{ form_widget(form.plainPassword.first, { 'attr': {'class': 'form-control'} }) }}
                    </div>
            </div>
            <div class="form-group">
                <label class="control-label label col-xs-12" for="salon"> {{ form_label(form.plainPassword.second) }}</label>
                     <div class="col-sm-12">
                            {{ form_widget(form.plainPassword.second, { 'attr': {'class': 'form-control'} }) }}
                    </div>
            </div>
            <div id="actionsButtons">
              {{ form_end(form) }}
            </div>
      </div>

      <div class="modal-footer">
        <span data-dismiss="modal" class="closeAlert glyphicon glyphicon-remove"></span>
      </div>
   </div>



<script type="text/javascript">
      $( document ).ready( function () {
       $( "#changePassword" ).validate( {
         rules: {
           'fos_user_change_password_form[plainPassword][first]': {
             required: true,
             minlength: 5
           },
           'fos_user_change_password_form[plainPassword][second]': {
             equalTo: "#fos_user_change_password_form_plainPassword_first"
           }
         },
         messages: {
           'fos_user_change_password_form[plainPassword][first]': {
             required: "{{ "message_validation.firstPassword_required"|trans({}, "translator") }}",
             minlength: "{{ "message_validation.firstPassword_minlength"|trans({}, "translator") }}"
           },
           'fos_user_change_password_form[plainPassword][second]': {
             required: "{{ "message_validation.secondPassword_required"|trans({}, "translator") }}",
             minlength: "{{ "message_validation.secondPassword_minlength"|trans({}, "translator") }}",
             equalTo: "{{ "message_validation.secondPassword_equalTo"|trans({}, "translator") }}"
           }
         },
         errorElement: "em",
         errorPlacement: function ( error, element ) {
           // Add the `help-block` class to the error element
           error.addClass( "help-block" );

           // Add `has-feedback` class to the parent div.form-group
           // in order to add icons to inputs
           element.parents( ".col-sm-5" ).addClass( "has-feedback" );

           if ( element.prop( "type" ) === "checkbox" ) {
             error.insertAfter( element.parent( "label" ) );
           } else {
             error.insertAfter( element );
           }

           // Add the span element, if doesn't exists, and apply the icon classes to it.
           if ( !element.next( "span" )[ 0 ] ) {
             $( "<span class='glyphicon glyphicon-remove form-control-feedback'></span>" ).insertAfter( element );
           }
         },
         success: function ( label, element ) {
           // Add the span element, if doesn't exists, and apply the icon classes to it.
           if ( !$( element ).next( "span" )[ 0 ] ) {
             $( "<span class='glyphicon glyphicon-ok form-control-feedback'></span>" ).insertAfter( $( element ) );
           }
         },
         highlight: function ( element, errorClass, validClass ) {
           $( element ).parents( ".col-sm-5" ).addClass( "has-error" ).removeClass( "has-success" );
           $( element ).next( "span" ).addClass( "glyphicon-remove" ).removeClass( "glyphicon-ok" );
         },
         unhighlight: function ( element, errorClass, validClass ) {
           $( element ).parents( ".col-sm-5" ).addClass( "has-success" ).removeClass( "has-error" );
           $( element ).next( "span" ).addClass( "glyphicon-ok" ).removeClass( "glyphicon-remove" );
         }
       } );

    });

          $('#myModal .deco').css('display','none');

</script>
{% endblock %}
