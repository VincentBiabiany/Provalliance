{% extends 'base.html.twig' %}
{% block title %}Suivi des demandes{% endblock %}

{% block body %}
<style>
#forPrint{
	position: absolute;
  left: -8000px;
}
</style>

	<div class="header">
		<img style="display: block !important;margin: auto !important;" id="logotop" src="{{ img }}">
	</div>
	<div class="head">
		{{ "suivi_demandes.header"|trans({}, "translator") }}
	</div>
	<div class="nomSalon">
{% if is_granted('ROLE_ADMIN') or is_granted('ROLE_COORDINATEUR') %}
			{{ app.session.get('nomSalon') }}
{% elseif is_granted('ROLE_JURIDIQUE') %}
{{ "suivi_demandes.serviceJuridique"|trans({}, "translator") }}
{% elseif is_granted('ROLE_PAIE') %}
{{ "suivi_demandes.servicePaie"|trans({}, "translator") }}
{% endif %}
	</div>
	<div class="container">

	<div class="col-sm-12" >
		<div id="selectionMultiple">
			<div id="wrap">
				<div id="nbSelect" class="col-sm-3">
					<span class="counter"></span>	<span class="textSelect"></span>
				</div>

				<div id="act" class="col-sm-8">
					<ul>
							<li id="validation">
									<i class="glyphicon glyphicon-ok"></i>
									<span>{{ "suivi_demandes.validation"|trans({}, "translator") }}</span>
							</li>
							<li id="export">
									<i class="glyphicon glyphicon-download-alt"></i>
								  <span>{{ "suivi_demandes.export"|trans({}, "translator") }}</span>
							</li>
							<li id="impression">
									<i class="glyphicon glyphicon-print"></i>
								  <span>{{ "suivi_demandes.impression"|trans({}, "translator") }}</span>
							</li>
							<li id="allselect">
									<i class="glyphicon glyphicon-th-list"></i>
									<span>{{ "suivi_demandes.selectAll"|trans({}, "translator") }}</span>
							</li>
							<li id="deselect">
								  <i class="glyphicon glyphicon-remove"></i>
									<span>{{ "suivi_demandes.deselect"|trans({}, "translator") }}</span>
							</li>

					</ul>
				</div>
		  </div>
		</div>

		<table id="demande" class="table table-striped table-bordered" cellspacing="0" width="100%">
			<thead>
			<tr>
				<th>id</th>
				<th class="click"></th>
				<th>{{ "suivi_demandes.codesage"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.enseigne"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.appelation"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.coordinateur"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.manager"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.date"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.statut"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.typedemande"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.collaborateur"|trans({}, "translator") }}</th>
			</tr>
			</thead>
			<thead id="header-filtre"></thead>
			<tfoot>
			<tr id="filtre">
				<th>id</th>
				<th class="click"></th>
				<th>{{ "suivi_demandes.codesage"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.enseigne"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.appelation"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.coordinateur"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.manager"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.date"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.statut"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.typedemande"|trans({}, "translator") }}</th>
				<th>{{ "suivi_demandes.collaborateur"|trans({}, "translator") }}</th>
			</tr>
			</tfoot>
			<tbody>
			</tbody>
		</table>


		{% if not is_granted('ROLE_PAIE') and not is_granted('ROLE_JURIDIQUE') %}
			<button onclick="window.location.href ='{{ path("homepage") }}'" class="btn-black precedent">{{ "global.back"|trans({}, "global") }}</button>
		{% endif %}
	</div>
   <div id='forPrint'></div>
	</div>
		{{ form_start(form, { 'attr': { 'id': 'exportMultiple', 'action':path("exportXls") } }) }}
			  {{ form_widget(form.idDemandes) }}
	  {{ form_end(form) }}

	<div id="myModal" class="modal fade" role="dialog">
		<div class="modal-dialog">
			<div class="modal-content">
					<div class="modal-body">
						<div class="flashConfirmation">
						  {{ flash }}
							<span class="glyphicon glyphicon-ok-sign"></span>
						</div>
					</div>
					<span class="closeAlert glyphicon glyphicon-remove" data-dismiss="modal"></span>

			</div>

		</div>
	</div>

	<link rel="stylesheet" type="text/css" href="{{ asset('css/jquery.dataTables.min.css') }}">
	{% javascripts
	   '@AppBundle/Resources/public/js/demande.js.twig' %}
	    <script type="text/javascript" src="{{ asset_url }}"></script>
	{% endjavascripts %}

		<script src="{{ asset('js/jquery.dataTables.min.js') }}"></script>
	<script src="{{ asset('js/printThis.js') }}"></script>
	<script type="text/javascript" class="init">
	sessionStorage.setItem('NbDemandeComplexe',0);

		$(document).ready(function(){


			var response = new Array();
			var returnArray = new Array();
			var selInitd = new Array();
			var setFilter = {};

			function getSelectedList(coln){

				var data = {'selected': coln}
				$.ajax({
					type: 'POST',
					url: "{{ path('filter') }}",
					data: data,
					async: false,
					success: function(msg){
						returnArray = msg;
					}
				})
				return returnArray;
			}

			//Construction du tableau de la liste des demandes
			 dt  = $('#demande').DataTable({
				  "searching": false,
					"processing": true,
					"serverSide": true,
					"ajax":{
							type: 'POST',
							url:"{{ path('paginate') }}",
							"data" : function ( d ) {
								d.extra = setFilter;
							},
					} ,
					"sAjaxDataProp": "data",
					"pageLength": 20,
					"order": [[ 7, 'desc' ]],
					"columns":[
						  {"data": "id"},
							{"data": "", "class":"filt details-control", "orderable":false,},
							{"data": "sage", "class":"filt","name":"x"},
							{"data": "enseigne","class":"filt","name":"x"},
							{"data": "appelation","class":"filt","name":"x"},
							{"data": "coordinateur","class":"filt","name":"x"},
							{"data": "manager","class":"filt","name":"x"},
							{"data": "date","class":"filt","name":"x"},
							{"data": "statut","name":"default", "class":"filt statut"},
							{"data": "type","class":"filt","name":"x"},
							{"data": "collaborateur","class":"filt","name":"x"},
					],
					"columnDefs": [
							{
									"targets": [0],
									"visible": false,
									"searchable": true
							}
					],
					"language":
								{
								 "processing":     "{{ "datatable.processing"|trans({}, "translator") }}",
								 "search":         "{{ "datatable.search"|trans({}, "translator") }}",
								 "lengthMenu":     "{{ "datatable.lengthMenu"|trans({}, "translator") }}",
								 "info":           "{{ "datatable.info"|trans({}, "translator") }}",
								 "infoEmpty":      "{{ "datatable.infoEmpty"|trans({}, "translator") }}",
								 "infoFiltered":   "{{ "datatable.infoFiltered"|trans({}, "translator") }}",
								 "infoPostFix":    "",
								 "loadingRecords": "{{ "datatable.loadingRecords"|trans({}, "translator") }}",
								 "zeroRecords":    "{{ "datatable.zeroRecords"|trans({}, "translator") }}",
								 "emptyTable":     "{{ "datatable.emptyTable"|trans({}, "translator") }}",
								 "paginate": {
										 "first":      "{{ "datatable.first"|trans({}, "translator") }}",
										 "previous":   "{{ "datatable.previous"|trans({}, "translator") }}",
										 "next":       "{{ "datatable.next"|trans({}, "translator") }}",
										 "last":       "{{ "datatable.last"|trans({}, "translator") }}"
									 }
							 },
							 initComplete: function (settings, json) {
								 var api = this.api();

								 api.columns().indexes().flatten().each( function ( i ) {
									 selInitd[i] = false;
									 var column = api.column( i );
									 if ( i != 0 && i!= 1){
										 var select = $('<select id=' + i + ' style="width:100%; color:black;"><option value=""></option></select>')
										 .appendTo( $(column.footer()).empty() )
										 .on( 'change', function () {

											 selected = $('#'+i).val();

											 if (selected == ""){
												 delete setFilter[i] ;
											 } else {
												 setFilter[i] = selected;
											 }

											 console.log(selected);
											 console.log(setFilter);

											 api.ajax.reload( null, true );
										 })
										 .on( 'focus', function () {
											 //only want to perform this once per click/page refresh or else you get duplicate values
											 if(!selInitd[i]){
												 var selectedL = getSelectedList(i);
												 for(d = 0; d < selectedL.length; d++) {
													 select.append( '<option id="selected_'+ i +'" value="' + selectedL[d] + '">' + selectedL[d] + '</option>' )
												 }
												 selInitd[i] = true;
											 }
										 });
									 }
								 });
							 }// FIN INITCOMPLETE
			});

			$('#filtre').appendTo($('#header-filtre'));

			//Affiche le détail d'une demande
			$('#demande tbody').on( 'click', 'tr td.details-control', function () {
					var id = dt.row(this).data()['id'];
					$.ajax({
							url: "{{ path('detail') }}",
						  data: {"id" : id}
						}).done(function( response ) {
					    window.location.href = response;
				  });
				}
			);



{% if is_granted('ROLE_PAIE') or is_granted('ROLE_JURIDIQUE') or is_granted('ROLE_ADMIN') %}
			//Sélection Multiple des demandes
			$('#demande tbody').on( 'click', 'tr', function () {
				// Si le tableau des demandes est vide on désactive la Sélection Multiple
				if ( $('.dataTables_empty').length) {
				}else{

	         $(this).toggleClass('selected');
					 $('#nbSelect .counter').text(dt.rows('.selected').data().length+' ');

					 //Si il y a au moins 1 ligne séléctionné
					if (  $('tr.selected').length >0){
								if (  $('tr.selected').length == 1){
										$('#nbSelect .textSelect').text('élément sélectionné');
								}else{
										$('#nbSelect .textSelect').text('éléments sélectionnés');
								}
								//Boucle sur toute les demandes sélectionnées pour savoir si l'une entre elle est une demande complexe
								// Si oui on désactive la validation Multiple
								$('tr.selected').each(function(i, obj) {
	                    var id = dt.row(this).data()['id'];
											//Validation Multiple activé ou non ?
											 typeDemande(id);


									});
									if(Number(sessionStorage.getItem('NbDemandeComplexe')) > 0){
										$('#validation').css('display','none');
									}else{
										$('#validation').css('display','inline-block');
									}
									sessionStorage.setItem('NbDemandeComplexe',0);

								$('#selectionMultiple div').css('display','block');
					//Si aucune ligne n'est séléctionné
					}else{
					  	$('#selectionMultiple div').css('display','none');
					}
				}
	 });
{% else %}
			$('#selectionMultiple').css('display','none');
{% endif %}


			//Impression multiple des demandes
					$('#impression').on( 'click', function () {
						demandes = [];
						types =[];
						i=0;
						$('tr.selected').each(function(i, obj) {
									 demandes[i]= dt.row(this).data()['id'];
									 types[i] =  dt.row(this).data()['type'];

							});

							//On vérifie que les demandes soient du même type
							if (sameDemande(types)){
								var url1 = 'http://'+$(location).attr('host')+"{{ asset('css/print.css') }}";

											$.ajax({
													url: "{{ path('printMultiple') }}",
													async: false,
												  data: {"id" : demandes}
												}).done(function( response ) {
											    	$("#forPrint").html("");
											    	$("#forPrint").append(response);
														$("#forPrint").printThis({
															debug: false,               // show the iframe for debugging
													    importCSS: false,            // import page CSS
													    importStyle: false,         // import style tags
													    printContainer: false,       // grab outer container as well as the contents of the selector
													    loadCSS: url1,  // path to additional css file - use an array [] for multiple
													    pageTitle: "",              // add title to print page
													    removeInline: false,        // remove all inline styles from print elements
													    printDelay: 333,            // variable print delay; depending on complexity a higher value may be necessary
													    header: null,               // prefix to html
													    footer: null,               // postfix to html
													    base: false ,               // preserve the BASE tag, or accept a string for the URL
													    formValues: true,           // preserve input/form values
													    canvas: false,              // copy canvas elements (experimental)
													    removeScripts: false,       // remove script tags from print content
													    copyTagClasses: false       // copy classes from the html & body tag
														});
										  });


							}else{
								$(".flashConfirmation").html('');
								$(".flashConfirmation").css('color','red');
								$(".flashConfirmation").append('Impression impossible !<br/> Les demandes sélectionnées ne sont pas du même types.');
								$("#myModal").modal();
						 	 $("#myModal").css('display','flex');
							}

					});

					// Trigger Validation Multiple
			 	 // Description : Validation multiple des demandes simples
			 		$('#validation').on( 'click', function () {
			 			demandes = [];
			 			nbValidates = 0;
			 			$('tr.selected').each(function(i, obj) {
			 						var id = dt.row(this).data()['id'];
			 						 demandes[i]=id;
			 						 nbValidates = nbValidates +1;
			 				});
			 				$.ajax({
			 						url: "{{ path('demandeValidate') }}",
			 						data: {"demandes" : demandes,'nbValidates':nbValidates},
			 						type: 'POST'
			 					}).done(function( response ) {
			 						window.location.href = response;
			 				});

			 	});

			 	//Affiche le détail d'une demande
			 	$('#demande tbody').on( 'click', 'tr td.details-control', function () {
			 			var id = dt.row(this).data()['id'];
			 			$.ajax({
			 					url: '{{ path("detail") }}',
			 					data: {"id" : id}
			 				}).done(function( response ) {
			 					window.location.href = response;
			 			});
			 		}
			 	);

				// Function typeDemande
	 		 // Paramètres : id Demande
	      // Description : Active ou Désactive la fonctionnalité "VALIDATION MULTIPLE" selon le type de la demande sélectionnée
	       function typeDemande(id){
	        $.ajax({
	            url: "{{ path('typeDemande') }}",
	            data: {"id" : id},
	            async: false
	          }).success(function( response ) {
	            if (response == '1'){
	            }else{
	              oldNb = Number(sessionStorage.getItem('NbDemandeComplexe'));
	              sessionStorage.setItem('NbDemandeComplexe',oldNb+1);
	            }
	        });
	     }


});

{% if flash %}
	 $("#myModal").modal();
	 $("#myModal").css('display','flex');

{% endif %}


	</script>


{% endblock %}
